/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Gradle plugin project to get you started.
 * For more details take a look at the Writing Custom Plugins chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4/userguide/custom_plugins.html
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
    `java-gradle-plugin`
    id("com.gradle.plugin-publish") version "0.20.0"

    // Apply the Kotlin JVM plugin to add support for Kotlin.
    id("org.jetbrains.kotlin.jvm") version "1.5.31"

    id("maven-publish")
}

group = "com.rnkoaa.secret.plugin"
version = "0.0.1"

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Align versions of all Kotlin components
    implementation(platform("org.jetbrains.kotlin:kotlin-bom"))

    // Use the Kotlin JDK 8 standard library.
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
}

testing {
    suites {
        // Configure the built-in test suite
//        val test by getting(JvmTestSuite::class) {
//            // Use Kotlin Test test framework
//            useKotlinTest()
//        }

        // Create a new test suite
//        val functionalTest by registering(JvmTestSuite::class) {
//            // Use Kotlin Test test framework
//            useKotlinTest()
//
//            dependencies {
//                // functionalTest test suite depends on the production code in tests
//                implementation(project)
//            }
//
//            targets {
//                all {
//                    // This test suite should run after the built-in test suite has run its tests
//                    testTask.configure { shouldRunAfter(test) }
//                }
//            }
//        }
    }
}

gradlePlugin {
    // Define the plugin
//    val greeting by plugins.creating {
//        id = "com.rnkoaa.secret.plugin.greeting"
//        implementationClass = "com.rnkoaa.secret.plugin.SecretPluginPlugin"
//    }
    plugins {
        create("SecretPlugin") {
            id = "com.rnkoaa.secret.plugin"
            implementationClass = "com.rnkoaa.secret.plugin.SecretPlugin"
        }
    }
}

//https://medium.com/friday-insurance/how-to-write-a-gradle-plugin-in-kotlin-68d7a3534e71

//gradlePlugin.testSourceSets(sourceSets["functionalTest"])

//tasks.named<Task>("check") {
//    // Include functionalTest as part of the check lifecycle
//    dependsOn(testing.suites.named("functionalTest"))
//}

// https://docs.gradle.org/current/userguide/publishing_gradle_plugins.html#custom-plugin-repositories

publishing {
    repositories {
        maven {
            name = "localPluginRepository"
            url = uri("../../local-plugin-repository")
        }
    }
//    publications {
//        create<MavenPublication>("maven") {
////            group = "com.rnkoaa.secret.plugin.greeting"
////            artifactId = "secret-plugin"
////            version = "0.0.1"
////            from(components["java"])
//        }
//    }
}